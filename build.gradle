
buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.h2database:h2:1.4.186'
        classpath 'org.jooq:jooq-codegen:3.8.1'
        classpath 'io.ratpack:ratpack-gradle:1.5.4'
    }
}

apply plugin: "io.ratpack.ratpack-groovy"
apply plugin: "idea"


repositories {
    jcenter()
}


dependencies {
    compile ratpack.dependency('hikari')
    compile 'com.h2database:h2:1.4.186'
    compile 'org.jooq:jooq:3.8.1'
}

import org.jooq.util.jaxb.*
import org.jooq.util.*

// tag::jooq[]
task jooqCodegen {
    doLast {
        String init = "$projectDir/src/main/resources/init.sql".replaceAll('\\\\', '/')
        Configuration configuration = new Configuration()
                .withJdbc(new Jdbc()
                .withDriver("org.h2.Driver")
                .withUrl("jdbc:h2:mem:todo;INIT=RUNSCRIPT FROM '$init'")
                )
                .withGenerator(new Generator()
                    .withDatabase(new Database()
                        .withName("org.jooq.util.h2.H2Database")
                        .withIncludes(".*")
                        .withExcludes("")
                        .withInputSchema("PUBLIC")
            )
                .withTarget(new Target()
                    .withDirectory("$projectDir/src/main/groovy")
                    .withPackageName("jooq")))
        GenerationTool.generate(configuration)
    }
}
// end::jooq[]